# SPDX-FileCopyrightText: 2025 hexaTune LLC
# SPDX-License-Identifier: MIT

name: Deploy Flutter to Google Play (Internal)

on:
  workflow_dispatch:
    inputs:
      buildNumber:
        description: "Android versionCode (pubspec +buildNumber)"
        required: true
        default: "10001"
      releaseName:
        description: "Release name (Play Console notu)"
        required: false
        default: "CI Internal"
      track:
        description: "Play track (internal/alpha/beta/production)"
        required: true
        default: "internal"
      status:
        description: "Release status (draft/inProgress/ halted/completed)"
        required: true
        default: "completed"

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hexagenapp

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0" # projenize uygun sürüm

      - name: Flutter pub get
        run: flutter pub get

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # pubspec.yaml'daki buildNumber'ı güncelle
      - name: Bump pubspec buildNumber
        run: |
          BN="${{ github.event.inputs.buildNumber }}"
          sed -i -E "s/^version: ([0-9]+\.[0-9]+\.[0-9]+)\+[0-9]+$/version: \1+${BN}/" pubspec.yaml
          echo "Updated pubspec:" && grep '^version:' pubspec.yaml

      # Keystore'u CI'da üret ve key.properties oluştur
      - name: Prepare signing
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=app/upload-keystore.jks
          EOF

      # Android SDK lisansları
      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses || true

      # Release AAB üret
      - name: Build AAB (release)
        run: flutter build appbundle --release

      # (Opsiyonel) WhatsNew metinleri kullan
      - name: Prepare WhatsNew files
        if: ${{ secrets.WHATSNEW_ENABLED == 'true' }}
        run: |
          mkdir -p android/whatsnew
          : > android/whatsnew/${{ secrets.WHATSNEW_DEFAULT_LOCALE || 'en-US' }}.txt
          echo "Stability improvements and minor fixes." >> android/whatsnew/${{ secrets.WHATSNEW_DEFAULT_LOCALE || 'en-US' }}.txt

      # Play Console'a yükle
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ secrets.PACKAGE_NAME }}
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: ${{ github.event.inputs.track }}
          status: ${{ github.event.inputs.status }}
          inAppUpdatePriority: 0
          releaseName: ${{ github.event.inputs.releaseName }}
          whatsNewDirectory: android/whatsnew
